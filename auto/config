#!/bin/bash -e

# some fancy colors
if [ $(tty -s) ]; then
    RED=$(tput setaf 1)
    BRIGHT=$(tput bold)
    NORMAL=$(tput sgr0)
else
    RED=
    BRIGHT=
    NORMAL=
fi

# current architecture
arch=$(dpkg --print-architecture)

# options
lb_opts=""
dist="chromodoris"
dist_version="3.0"
dist_reltag="development snapshot"
#snapshot_build=yes

if [ -z "$FLAVOR" ]; then
  FLAVOR="kde"
  echo "${RED}${BRIGHT}WARNING WARNING WARNING${NORMAL}"
  echo "${BRIGHT}FLAVOR is not defined, choosing $FLAVOR by default."
  echo "Set FLAVOR to 'gnome' if you want a gnome desktop${NORMAL}"
fi

# live-build doesn't work if --parent-debian-distribution is unknown of
# debian-cd => we have to put a symlink so that it deals with Tanglu like jessie/sid
if [ ! -e "/usr/share/live/build/data/debian-cd/$dist" ]; then
  if [ -w /usr/share/live/build/data/debian-cd ]; then
    ln -sf sid "/usr/share/live/build/data/debian-cd/$dist"
  else
    echo "ERROR: Run this first:"
    echo "ln -sf sid /usr/share/live/build/data/debian-cd/$dist"
    exit 1
  fi
fi

# Debian-installer config
debian_installer_opts="--debian-installer-gui true --debian-installer-distribution $dist"

case "$arch" in
  amd64)
    debian_installer_opts="$debian_installer_opts --debian-installer live"
  ;;
  i386)
    debian_installer_opts="$debian_installer_opts --debian-installer live --linux-flavours 686-pae"
  ;;
  *)
    echo "WARNING: configuration not tested on arch $arch" >&2
  ;;
esac
# add installer opts to lb config call
lb_opts="$lb_opts $debian_installer_opts"

# create some directories which we will need later
mkdir -p config/package-lists
mkdir -p config/includes.chroot

# configure selected flavor
case "$FLAVOR" in
  "kde"|"KDE")
    FLAVOR="KDE"
    FLAVOR_PRETTY="KDE Plasma Desktop"
    # create package config
    cat > config/package-lists/desktop.list.chroot <<EOF
tanglu-standard
grub2
tanglu-kde
calamares
calamares-branding-tanglu-kde
EOF
    cp -r config/includes.chroot.kde/root config/includes.chroot/root
    cp -r config/includes.chroot.kde/home config/includes.chroot/home
    # fix permissions
    chmod go+rX config/includes.chroot/home
  ;;
  "gnome"|"GNOME")
    FLAVOR="GNOME"
    FLAVOR_PRETTY="GNOME Desktop"
    # create package config
    cat > config/package-lists/desktop.list.chroot <<EOF
tanglu-standard
grub2
tanglu-gnome
calamares
calamares-branding-tanglu-gnome
EOF
    cp -r config/includes.chroot.gnome/usr config/includes.chroot/usr
  ;;
  "core")
    FLAVOR="Core"
    FLAVOR_PRETTY="Core"
    # create package config
    cat > config/package-lists/desktop.list.chroot <<EOF
tanglu-standard
grub2
EOF
  ;;
esac

# include the live tools
cat > config/package-lists/live.list.chroot <<EOF
live-boot
live-config
live-config-systemd
EOF

# set the right live-cd bootmenu for this flavor
if [ x"${FLAVOR,,}" = x"core" ]; then
  cp -f config/bootloaders/live.cfg.core.in config/bootloaders/isolinux/live.cfg.in
  cp -f config/bootloaders/live.cfg.core.in config/bootloaders/syslinux/live.cfg.in
else
  cp -f config/bootloaders/live.cfg.in config/bootloaders/isolinux/
  cp -f config/bootloaders/live.cfg.in config/bootloaders/syslinux/
fi

# create a pretty version name, containing all information
if [ x"$dist_reltag" = x"" ]; then
  VERSION_PRETTY="$dist_version ($dist)"
  IMAGE_FILENAME=tanglu-$dist_version-${FLAVOR,,}-live
else
  VERSION_PRETTY="$dist_version [$dist_reltag] ($dist)"
  IMAGE_FILENAME=tanglu-$dist_version-${dist_reltag// /_}-${FLAVOR,,}-live
fi

# we use different image names for snapshot builds and don't include update sources
if [ x"$snapshot_build"x = x"yes"x ]; then
  IMAGE_FILENAME=tanglu-$dist-${FLAVOR,,}-live
  dist_version=$dist
fi
lb_opts="$lb_opts --security false --updates true"

# update our splash screen
sed -e s/@FLAVOR_PRETTY@/"$FLAVOR_PRETTY"/g config/bootloaders/splash.svg.in > config/bootloaders/splash.svg
sed -i s/@VERSION@/"$VERSION_PRETTY"/g config/bootloaders/splash.svg
cp -f config/bootloaders/splash.svg config/bootloaders/isolinux/
mv -f config/bootloaders/splash.svg config/bootloaders/syslinux/

# FIXME: should be fixed in the live-build autodetection
case "$arch" in
  amd64)
    kernel_flavour="amd64"
  ;;
  i386)
    kernel_flavour="686-pae"
  ;;
  *)
    echo "WARNING: configuration not tested on arch $arch" >&2
  ;;
esac

lb config noauto \
    --distribution "$dist" \
    --mode tanglu \
    --binary-images iso-hybrid \
    --archive-areas "main contrib non-free" \
    --mirror-bootstrap http://archive.tanglu.org/tanglu \
    --mirror-binary http://archive.tanglu.org/tanglu \
    --mirror-debian-installer http://archive.tanglu.org/tanglu \
    --parent-mirror-bootstrap http://archive.tanglu.org/tanglu \
    --parent-mirror-binary http://archive.tanglu.org/tanglu \
    --parent-mirror-debian-installer http://archive.tanglu.org/tanglu \
    --apt-source-archives false \
    --keyring-packages tanglu-archive-keyring \
    --bootloader syslinux \
    --firmware-binary true \
    --firmware-chroot true \
    --initsystem systemd \
    --iso-application "Tanglu GNU/Linux" \
    --iso-publisher "Tanglu Project" \
    --iso-volume "Tanglu $dist_version $FLAVOR Live" \
    --image-name $IMAGE_FILENAME \
    --linux-flavours $kernel_flavour \
    $lb_opts \
    "${@}"
